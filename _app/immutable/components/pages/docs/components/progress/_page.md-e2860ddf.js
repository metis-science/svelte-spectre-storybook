import{S as as,i as ns,s as ts,a0 as es,a1 as ps,k as E,q as I,a as C,w as m,l as h,m as y,r as S,h as l,c as q,x as k,n as os,b as f,L as K,y as g,a2 as ls,f as v,t as _,z as b,B as F}from"../../../../../chunks/index-4d397774.js";/* empty css                                                                  */import{P as U}from"../../../../../chunks/Progress-30e56da2.js";import{G as rs,C as R}from"../../../../../chunks/Col-56b667da.js";import{K as cs}from"../../../../../chunks/knobs-118d5e43.js";function us(r){let a,e;return a=new U({props:{value:r[0].value,max:r[0].max,color:r[0].color,invert:r[0].invert}}),{c(){m(a.$$.fragment)},l(s){k(a.$$.fragment,s)},m(s,p){g(a,s,p),e=!0},p(s,p){const c={};p&1&&(c.value=s[0].value),p&1&&(c.max=s[0].max),p&1&&(c.color=s[0].color),p&1&&(c.invert=s[0].invert),a.$set(c)},i(s){e||(v(a.$$.fragment,s),e=!0)},o(s){_(a.$$.fragment,s),e=!1},d(s){b(a,s)}}}function is(r){let a,e;return a=new U({props:{value:"50",max:"100",color:"warning"}}),{c(){m(a.$$.fragment)},l(s){k(a.$$.fragment,s)},m(s,p){g(a,s,p),e=!0},p:F,i(s){e||(v(a.$$.fragment,s),e=!0)},o(s){_(a.$$.fragment,s),e=!1},d(s){b(a,s)}}}function fs(r){let a,e;return a=new U({props:{value:"25",max:"100",color:"success"}}),{c(){m(a.$$.fragment)},l(s){k(a.$$.fragment,s)},m(s,p){g(a,s,p),e=!0},p:F,i(s){e||(v(a.$$.fragment,s),e=!0)},o(s){_(a.$$.fragment,s),e=!1},d(s){b(a,s)}}}function $s(r){let a,e;return a=new U({props:{color:"error"}}),{c(){m(a.$$.fragment)},l(s){k(a.$$.fragment,s)},m(s,p){g(a,s,p),e=!0},p:F,i(s){e||(v(a.$$.fragment,s),e=!0)},o(s){_(a.$$.fragment,s),e=!1},d(s){b(a,s)}}}function ms(r){let a,e,s,p,c,d,i,$;return a=new R({props:{col:"6",xs:"12",$$slots:{default:[us]},$$scope:{ctx:r}}}),s=new R({props:{col:"6",xs:"12",$$slots:{default:[is]},$$scope:{ctx:r}}}),c=new R({props:{col:"6",xs:"12",$$slots:{default:[fs]},$$scope:{ctx:r}}}),i=new R({props:{col:"6",xs:"12",$$slots:{default:[$s]},$$scope:{ctx:r}}}),{c(){m(a.$$.fragment),e=C(),m(s.$$.fragment),p=C(),m(c.$$.fragment),d=C(),m(i.$$.fragment)},l(t){k(a.$$.fragment,t),e=q(t),k(s.$$.fragment,t),p=q(t),k(c.$$.fragment,t),d=q(t),k(i.$$.fragment,t)},m(t,o){g(a,t,o),f(t,e,o),g(s,t,o),f(t,p,o),g(c,t,o),f(t,d,o),g(i,t,o),$=!0},p(t,o){const L={};o&5&&(L.$$scope={dirty:o,ctx:t}),a.$set(L);const O={};o&4&&(O.$$scope={dirty:o,ctx:t}),s.$set(O);const T={};o&4&&(T.$$scope={dirty:o,ctx:t}),c.$set(T);const P={};o&4&&(P.$$scope={dirty:o,ctx:t}),i.$set(P)},i(t){$||(v(a.$$.fragment,t),v(s.$$.fragment,t),v(c.$$.fragment,t),v(i.$$.fragment,t),$=!0)},o(t){_(a.$$.fragment,t),_(s.$$.fragment,t),_(c.$$.fragment,t),_(i.$$.fragment,t),$=!1},d(t){b(a,t),t&&l(e),b(s,t),t&&l(p),b(c,t),t&&l(d),b(i,t)}}}function ks(r){let a,e,s,p,c,d,i,$,t,o,L,O,T,P,x,j,B,w,A,D,z,Y=`<code class="language-sv"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Progress <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'svelte-spectre'</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Progress</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>75<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Progress</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>warning<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Progress</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>25<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Progress</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code>`,M;x=new rs({props:{stack:!0,$$slots:{default:[ms]},$$scope:{ctx:r}}});function Z(n){r[1](n)}let J={config:vs};return r[0]!==void 0&&(J.state=r[0]),w=new cs({props:J}),es.push(()=>ps(w,"state",Z,r[0])),{c(){a=E("h1"),e=I(X),s=C(),p=E("p"),c=I("The Progress indicates the progress completion of a task."),d=C(),i=E("blockquote"),$=E("p"),t=I("If "),o=E("code"),L=I("value === null || undefined"),O=I(" it have indeterminate/loading state"),T=C(),P=E("p"),m(x.$$.fragment),j=C(),B=E("p"),m(w.$$.fragment),D=C(),z=E("pre"),this.h()},l(n){a=h(n,"H1",{});var u=y(a);e=S(u,X),u.forEach(l),s=q(n),p=h(n,"P",{});var G=y(p);c=S(G,"The Progress indicates the progress completion of a task."),G.forEach(l),d=q(n),i=h(n,"BLOCKQUOTE",{});var H=y(i);$=h(H,"P",{});var Q=y($);t=S(Q,"If "),o=h(Q,"CODE",{});var N=y(o);L=S(N,"value === null || undefined"),N.forEach(l),O=S(Q," it have indeterminate/loading state"),Q.forEach(l),H.forEach(l),T=q(n),P=h(n,"P",{});var V=y(P);k(x.$$.fragment,V),V.forEach(l),j=q(n),B=h(n,"P",{});var W=y(B);k(w.$$.fragment,W),W.forEach(l),D=q(n),z=h(n,"PRE",{class:!0});var ss=y(z);ss.forEach(l),this.h()},h(){os(z,"class","language-sv")},m(n,u){f(n,a,u),K(a,e),f(n,s,u),f(n,p,u),K(p,c),f(n,d,u),f(n,i,u),K(i,$),K($,t),K($,o),K(o,L),K($,O),f(n,T,u),f(n,P,u),g(x,P,null),f(n,j,u),f(n,B,u),g(w,B,null),f(n,D,u),f(n,z,u),z.innerHTML=Y,M=!0},p(n,[u]){const G={};u&5&&(G.$$scope={dirty:u,ctx:n}),x.$set(G);const H={};!A&&u&1&&(A=!0,H.state=n[0],ls(()=>A=!1)),w.$set(H)},i(n){M||(v(x.$$.fragment,n),v(w.$$.fragment,n),M=!0)},o(n){_(x.$$.fragment,n),_(w.$$.fragment,n),M=!1},d(n){n&&l(a),n&&l(s),n&&l(p),n&&l(d),n&&l(i),n&&l(T),n&&l(P),b(x),n&&l(j),n&&l(B),b(w),n&&l(D),n&&l(z)}}}const gs={file:"progress.md",title:"Progress",api:[{title:"value: number = undefined",description:"Progress value",variables:"any number"},{title:"max: number = 0",description:"Progress max",variables:"any number"},{title:'color: Colors = "light"',description:"Progress color",variables:"gray | light | primary | secondary | success | error"},{title:"invert: boolean = false",description:"Progress invert",variables:"true | false"}],config:{value:{type:"number",min:0,max:100,size:5},max:{type:"number",min:0,max:100,size:5},color:{options:["gray","light","primary","secondary","success","error"]},invert:{type:"checkbox"}}},{file:Es,title:X,api:hs,config:vs}=gs;function _s(r,a,e){let s={value:75,max:100,color:"primary",invert:!1};function p(c){s=c,e(0,s)}return[s,p]}class ys extends as{constructor(a){super(),ns(this,a,_s,ks,ts,{})}}export{ys as default,gs as metadata};
