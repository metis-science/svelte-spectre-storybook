import{S as I,i as J,s as N,a0 as O,a1 as Q,k as g,q as H,a as h,w as S,l as d,m as w,r as K,h as o,c as b,x as y,n as U,b as f,L as R,y as E,a2 as W,f as P,t as C,z as j}from"../../../../../chunks/index-4d397774.js";/* empty css                                                                  */import{S as T}from"../../../../../chunks/Switch-30c1d1d1.js";import{F as X,G as Y}from"../../../../../chunks/Group-249e7450.js";import{K as Z}from"../../../../../chunks/knobs-118d5e43.js";function x(l){let a;return{c(){a=H("Switch")},l(e){a=K(e,"Switch")},m(e,n){f(e,a,n)},d(e){e&&o(a)}}}function ss(l){let a;return{c(){a=H("Switch")},l(e){a=K(e,"Switch")},m(e,n){f(e,a,n)},d(e){e&&o(a)}}}function as(l){let a,e,n,i;return a=new T({props:{inline:l[0].inline,validity:l[0].validity,$$slots:{default:[x]},$$scope:{ctx:l}}}),n=new T({props:{inline:l[0].inline,validity:l[0].validity,$$slots:{default:[ss]},$$scope:{ctx:l}}}),{c(){S(a.$$.fragment),e=h(),S(n.$$.fragment)},l(t){y(a.$$.fragment,t),e=b(t),y(n.$$.fragment,t)},m(t,p){E(a,t,p),f(t,e,p),E(n,t,p),i=!0},p(t,p){const u={};p&1&&(u.inline=t[0].inline),p&1&&(u.validity=t[0].validity),p&4&&(u.$$scope={dirty:p,ctx:t}),a.$set(u);const r={};p&1&&(r.inline=t[0].inline),p&1&&(r.validity=t[0].validity),p&4&&(r.$$scope={dirty:p,ctx:t}),n.$set(r)},i(t){i||(P(a.$$.fragment,t),P(n.$$.fragment,t),i=!0)},o(t){C(a.$$.fragment,t),C(n.$$.fragment,t),i=!1},d(t){j(a,t),t&&o(e),j(n,t)}}}function ns(l){let a,e;return a=new Y({props:{$$slots:{default:[as]},$$scope:{ctx:l}}}),{c(){S(a.$$.fragment)},l(n){y(a.$$.fragment,n)},m(n,i){E(a,n,i),e=!0},p(n,i){const t={};i&5&&(t.$$scope={dirty:i,ctx:n}),a.$set(t)},i(n){e||(P(a.$$.fragment,n),e=!0)},o(n){C(a.$$.fragment,n),e=!1},d(n){j(a,n)}}}function ts(l){let a,e,n,i,t,p,u,r,q,k,$,L,F,m,A=`<code class="language-sv"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Switch <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'svelte-spectre'</span>

    <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token boolean">false</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span> <span class="token attr-name"><span class="token namespace">bind:</span>value</span> <span class="token attr-name">inline</span> <span class="token attr-name">validity=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token keyword">null</span><span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span>Switch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Switch</span><span class="token punctuation">></span></span></code>`,G;r=new X({props:{$$slots:{default:[ns]},$$scope:{ctx:l}}});function B(s){l[1](s)}let z={config:ls};return l[0]!==void 0&&(z.state=l[0]),$=new Z({props:z}),O.push(()=>Q($,"state",B,l[0])),{c(){a=g("h1"),e=H(V),n=h(),i=g("p"),t=H("Switch component."),p=h(),u=g("p"),S(r.$$.fragment),q=h(),k=g("p"),S($.$$.fragment),F=h(),m=g("pre"),this.h()},l(s){a=d(s,"H1",{});var c=w(a);e=K(c,V),c.forEach(o),n=b(s),i=d(s,"P",{});var _=w(i);t=K(_,"Switch component."),_.forEach(o),p=b(s),u=d(s,"P",{});var v=w(u);y(r.$$.fragment,v),v.forEach(o),q=b(s),k=d(s,"P",{});var M=w(k);y($.$$.fragment,M),M.forEach(o),F=b(s),m=d(s,"PRE",{class:!0});var D=w(m);D.forEach(o),this.h()},h(){U(m,"class","language-sv")},m(s,c){f(s,a,c),R(a,e),f(s,n,c),f(s,i,c),R(i,t),f(s,p,c),f(s,u,c),E(r,u,null),f(s,q,c),f(s,k,c),E($,k,null),f(s,F,c),f(s,m,c),m.innerHTML=A,G=!0},p(s,[c]){const _={};c&5&&(_.$$scope={dirty:c,ctx:s}),r.$set(_);const v={};!L&&c&1&&(L=!0,v.state=s[0],W(()=>L=!1)),$.$set(v)},i(s){G||(P(r.$$.fragment,s),P($.$$.fragment,s),G=!0)},o(s){C(r.$$.fragment,s),C($.$$.fragment,s),G=!1},d(s){s&&o(a),s&&o(n),s&&o(i),s&&o(p),s&&o(u),j(r),s&&o(q),s&&o(k),j($),s&&o(F),s&&o(m)}}}const es={file:"switch.md",title:"Switch",api:[{title:"value: boolean = false",description:"Checkbox value",variables:"true | false"},{title:"inline: boolean = false",description:"Checkbox inline",variables:"true | false"},{title:"validity: Validity = null",description:"Checkbox validity",variables:"null | success | error"}],config:{inline:{type:"checkbox"},validity:{options:[null,"success","error"]}}},{file:us,title:V,api:$s,config:ls}=es;function is(l,a,e){let n={inline:!1,validity:null};function i(t){n=t,e(0,n)}return[n,i]}class ms extends I{constructor(a){super(),J(this,a,is,ts,N,{})}}export{ms as default,es as metadata};
