import{S as X,i as Z,s as y,k as v,q as $,a as P,w as h,l as w,m as E,r as m,h as r,c as j,x as D,n as tt,b as _,L as f,y as C,f as F,t as S,z as x,B as et}from"../../../../../chunks/index-3764ed31.js";import{b as R}from"../../../../../chunks/paths-6cd3a76e.js";/* empty css                                                                  */import{F as T}from"../../../../../chunks/Figure-34c5895e.js";import{G as at,C as M}from"../../../../../chunks/Col-02e68245.js";function st(p){let t,a;return t=new T({props:{src:R+"/img/1b9a004a-db27-45e4-b762-0fa21bc97277.webp",alt:"Stable Diffusion Neural Art",contain:!0}}),{c(){h(t.$$.fragment)},l(e){D(t.$$.fragment,e)},m(e,n){C(t,e,n),a=!0},p:et,i(e){a||(F(t.$$.fragment,e),a=!0)},o(e){S(t.$$.fragment,e),a=!1},d(e){x(t,e)}}}function nt(p){let t;return{c(){t=$("img-fit-contain")},l(a){t=m(a,"img-fit-contain")},m(a,e){_(a,t,e)},d(a){a&&r(t)}}}function ot(p){let t,a;return t=new T({props:{src:R+"/img/4603a846-4daf-4018-aa74-e3ab567a69fc.webp",alt:"Stable Diffusion Neural Art",contain:!0,$$slots:{default:[nt]},$$scope:{ctx:p}}}),{c(){h(t.$$.fragment)},l(e){D(t.$$.fragment,e)},m(e,n){C(t,e,n),a=!0},p(e,n){const l={};n&1&&(l.$$scope={dirty:n,ctx:e}),t.$set(l)},i(e){a||(F(t.$$.fragment,e),a=!0)},o(e){S(t.$$.fragment,e),a=!1},d(e){x(t,e)}}}function lt(p){let t;return{c(){t=$("img-fit-cover")},l(a){t=m(a,"img-fit-cover")},m(a,e){_(a,t,e)},d(a){a&&r(t)}}}function rt(p){let t,a;return t=new T({props:{src:R+"/img/04696e1a-eb5d-43b9-bb1d-d2ee117f4430.webp",alt:"Stable Diffusion Neural Art",cover:!0,$$slots:{default:[lt]},$$scope:{ctx:p}}}),{c(){h(t.$$.fragment)},l(e){D(t.$$.fragment,e)},m(e,n){C(t,e,n),a=!0},p(e,n){const l={};n&1&&(l.$$scope={dirty:n,ctx:e}),t.$set(l)},i(e){a||(F(t.$$.fragment,e),a=!0)},o(e){S(t.$$.fragment,e),a=!1},d(e){x(t,e)}}}function ct(p){let t,a,e,n,l,g;return t=new M({props:{col:"4",sm:"12",$$slots:{default:[st]},$$scope:{ctx:p}}}),e=new M({props:{col:"4",sm:"12",$$slots:{default:[ot]},$$scope:{ctx:p}}}),l=new M({props:{col:"4",sm:"12",$$slots:{default:[rt]},$$scope:{ctx:p}}}),{c(){h(t.$$.fragment),a=P(),h(e.$$.fragment),n=P(),h(l.$$.fragment)},l(s){D(t.$$.fragment,s),a=j(s),D(e.$$.fragment,s),n=j(s),D(l.$$.fragment,s)},m(s,c){C(t,s,c),_(s,a,c),C(e,s,c),_(s,n,c),C(l,s,c),g=!0},p(s,c){const k={};c&1&&(k.$$scope={dirty:c,ctx:s}),t.$set(k);const A={};c&1&&(A.$$scope={dirty:c,ctx:s}),e.$set(A);const N={};c&1&&(N.$$scope={dirty:c,ctx:s}),l.$set(N)},i(s){g||(F(t.$$.fragment,s),F(e.$$.fragment,s),F(l.$$.fragment,s),g=!0)},o(s){S(t.$$.fragment,s),S(e.$$.fragment,s),S(l.$$.fragment,s),g=!1},d(s){x(t,s),s&&r(a),x(e,s),s&&r(n),x(l,s)}}}function pt(p){let t,a,e,n,l,g,s,c,k,A,N,O,L,z,Y,B,q,b,V=`<code class="language-sv"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Figure <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'svelte-spectre'</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Figure</span>
    <span class="token attr-name">src="</span><span class="token language-javascript"><span class="token punctuation">&#123;</span>base<span class="token punctuation">&#125;</span></span>/<span class="token attr-name">img</span>/<span class="token attr-name">04696e1a-eb5d-43b9-bb1d-d2ee117f4430.webp"</span>
    <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Stable Diffusion Neural Art<span class="token punctuation">"</span></span>
    <span class="token attr-name">cover</span>
    <span class="token punctuation">></span></span>img-fit-cover<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Figure</span><span class="token punctuation">></span></span></code>`,G,d,H;return d=new at({props:{stack:!0,$$slots:{default:[ct]},$$scope:{ctx:p}}}),{c(){t=v("h1"),a=$(U),e=P(),n=v("p"),l=$("You can use the element "),g=v("code"),s=$("<figure>"),c=$(" for an image with a caption. You can also add "),k=v("code"),A=$("contain"),N=$(", "),O=v("code"),L=$("cover"),z=$(", "),Y=v("code"),B=$("align = true | false"),q=P(),b=v("pre"),G=P(),h(d.$$.fragment),this.h()},l(o){t=w(o,"H1",{});var u=E(t);a=m(u,U),u.forEach(r),e=j(o),n=w(o,"P",{});var i=E(n);l=m(i,"You can use the element "),g=w(i,"CODE",{});var I=E(g);s=m(I,"<figure>"),I.forEach(r),c=m(i," for an image with a caption. You can also add "),k=w(i,"CODE",{});var J=E(k);A=m(J,"contain"),J.forEach(r),N=m(i,", "),O=w(i,"CODE",{});var K=E(O);L=m(K,"cover"),K.forEach(r),z=m(i,", "),Y=w(i,"CODE",{});var Q=E(Y);B=m(Q,"align = true | false"),Q.forEach(r),i.forEach(r),q=j(o),b=w(o,"PRE",{class:!0});var W=E(b);W.forEach(r),G=j(o),D(d.$$.fragment,o),this.h()},h(){tt(b,"class","language-sv")},m(o,u){_(o,t,u),f(t,a),_(o,e,u),_(o,n,u),f(n,l),f(n,g),f(g,s),f(n,c),f(n,k),f(k,A),f(n,N),f(n,O),f(O,L),f(n,z),f(n,Y),f(Y,B),_(o,q,u),_(o,b,u),b.innerHTML=V,_(o,G,u),C(d,o,u),H=!0},p(o,[u]){const i={};u&1&&(i.$$scope={dirty:u,ctx:o}),d.$set(i)},i(o){H||(F(d.$$.fragment,o),H=!0)},o(o){S(d.$$.fragment,o),H=!1},d(o){o&&r(t),o&&r(e),o&&r(n),o&&r(q),o&&r(b),o&&r(G),x(d,o)}}}const ut={file:"figure.md",title:"Figure"},{file:_t,title:U}=ut;class kt extends X{constructor(t){super(),Z(this,t,null,pt,y,{})}}export{kt as default,ut as metadata};
