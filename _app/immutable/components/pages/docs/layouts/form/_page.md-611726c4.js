import{S as q,i as L,s as C,k as R,q as x,a as w,w as g,l as z,m as j,r as G,h as u,c as E,x as _,n as M,b as k,L as S,y as d,f as h,t as v,z as F,B as H}from"../../../../../chunks/index-3764ed31.js";/* empty css                                                                  */import{I as T}from"../../../../../chunks/IconButton-d34479f6.js";import{I as A}from"../../../../../chunks/Icon-9c9504de.js";import{I as b}from"../../../../../chunks/Input-420d448c.js";import{F as D,G as y}from"../../../../../chunks/Group-cdf46b9c.js";function J(c){let n;return{c(){n=x("Success")},l(a){n=G(a,"Success")},m(a,s){k(a,n,s)},d(a){a&&u(n)}}}function K(c){let n,a;return n=new b({props:{validity:"success",$$slots:{default:[J]},$$scope:{ctx:c}}}),{c(){g(n.$$.fragment)},l(s){_(n.$$.fragment,s)},m(s,p){d(n,s,p),a=!0},p(s,p){const l={};p&1&&(l.$$scope={dirty:p,ctx:s}),n.$set(l)},i(s){a||(h(n.$$.fragment,s),a=!0)},o(s){v(n.$$.fragment,s),a=!1},d(s){F(n,s)}}}function N(c){let n;return{c(){n=x("Error")},l(a){n=G(a,"Error")},m(a,s){k(a,n,s)},d(a){a&&u(n)}}}function O(c){let n,a;return n=new A({props:{slot:"iconRight",icon:"emoji"}}),{c(){g(n.$$.fragment)},l(s){_(n.$$.fragment,s)},m(s,p){d(n,s,p),a=!0},p:H,i(s){a||(h(n.$$.fragment,s),a=!0)},o(s){v(n.$$.fragment,s),a=!1},d(s){F(n,s)}}}function Q(c){let n,a;return n=new b({props:{validity:"error",$$slots:{iconRight:[O],default:[N]},$$scope:{ctx:c}}}),{c(){g(n.$$.fragment)},l(s){_(n.$$.fragment,s)},m(s,p){d(n,s,p),a=!0},p(s,p){const l={};p&1&&(l.$$scope={dirty:p,ctx:s}),n.$set(l)},i(s){a||(h(n.$$.fragment,s),a=!0)},o(s){v(n.$$.fragment,s),a=!1},d(s){F(n,s)}}}function U(c){let n;return{c(){n=x("Error")},l(a){n=G(a,"Error")},m(a,s){k(a,n,s)},d(a){a&&u(n)}}}function V(c){let n,a;return n=new T({props:{slot:"iconRight",icon:"emoji"}}),{c(){g(n.$$.fragment)},l(s){_(n.$$.fragment,s)},m(s,p){d(n,s,p),a=!0},p:H,i(s){a||(h(n.$$.fragment,s),a=!0)},o(s){v(n.$$.fragment,s),a=!1},d(s){F(n,s)}}}function W(c){let n,a;return n=new b({props:{validity:"error",$$slots:{iconRight:[V],default:[U]},$$scope:{ctx:c}}}),{c(){g(n.$$.fragment)},l(s){_(n.$$.fragment,s)},m(s,p){d(n,s,p),a=!0},p(s,p){const l={};p&1&&(l.$$scope={dirty:p,ctx:s}),n.$set(l)},i(s){a||(h(n.$$.fragment,s),a=!0)},o(s){v(n.$$.fragment,s),a=!1},d(s){F(n,s)}}}function X(c){let n,a,s,p,l,i,f,m,$;return p=new y({props:{$$slots:{default:[K]},$$scope:{ctx:c}}}),i=new y({props:{$$slots:{default:[Q]},$$scope:{ctx:c}}}),m=new y({props:{$$slots:{default:[W]},$$scope:{ctx:c}}}),{c(){n=R("h4"),a=x("Form horizontal"),s=w(),g(p.$$.fragment),l=w(),g(i.$$.fragment),f=w(),g(m.$$.fragment)},l(t){n=z(t,"H4",{});var e=j(n);a=G(e,"Form horizontal"),e.forEach(u),s=E(t),_(p.$$.fragment,t),l=E(t),_(i.$$.fragment,t),f=E(t),_(m.$$.fragment,t)},m(t,e){k(t,n,e),S(n,a),k(t,s,e),d(p,t,e),k(t,l,e),d(i,t,e),k(t,f,e),d(m,t,e),$=!0},p(t,e){const o={};e&1&&(o.$$scope={dirty:e,ctx:t}),p.$set(o);const r={};e&1&&(r.$$scope={dirty:e,ctx:t}),i.$set(r);const I={};e&1&&(I.$$scope={dirty:e,ctx:t}),m.$set(I)},i(t){$||(h(p.$$.fragment,t),h(i.$$.fragment,t),h(m.$$.fragment,t),$=!0)},o(t){v(p.$$.fragment,t),v(i.$$.fragment,t),v(m.$$.fragment,t),$=!1},d(t){t&&u(n),t&&u(s),F(p,t),t&&u(l),F(i,t),t&&u(f),F(m,t)}}}function Y(c){let n,a,s,p,l,i,f,m=`<code class="language-sv"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span>Form<span class="token punctuation">,</span> FormGroup<span class="token punctuation">,</span> Icon<span class="token punctuation">,</span> IconButton<span class="token punctuation">,</span> Input<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'svelte-spectre'</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form</span> <span class="token attr-name">horizontal</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>Form horizontal<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormGroup</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">validity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Success<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Input</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormGroup</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormGroup</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">validity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Error <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Icon</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iconRight<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>emoji<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Input</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormGroup</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormGroup</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">validity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Error <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>IconButton</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iconRight<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>emoji<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Input</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormGroup</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form</span><span class="token punctuation">></span></span></code>`,$,t,e;return t=new D({props:{horizontal:!0,$$slots:{default:[X]},$$scope:{ctx:c}}}),{c(){n=R("h1"),a=x(B),s=w(),p=R("p"),l=x("Form provide the most common control styles used in forms, including input, textarea, select, checkbox, radio and switch and their groups."),i=w(),f=R("pre"),$=w(),g(t.$$.fragment),this.h()},l(o){n=z(o,"H1",{});var r=j(n);a=G(r,B),r.forEach(u),s=E(o),p=z(o,"P",{});var I=j(p);l=G(I,"Form provide the most common control styles used in forms, including input, textarea, select, checkbox, radio and switch and their groups."),I.forEach(u),i=E(o),f=z(o,"PRE",{class:!0});var P=j(f);P.forEach(u),$=E(o),_(t.$$.fragment,o),this.h()},h(){M(f,"class","language-sv")},m(o,r){k(o,n,r),S(n,a),k(o,s,r),k(o,p,r),S(p,l),k(o,i,r),k(o,f,r),f.innerHTML=m,k(o,$,r),d(t,o,r),e=!0},p(o,[r]){const I={};r&1&&(I.$$scope={dirty:r,ctx:o}),t.$set(I)},i(o){e||(h(t.$$.fragment,o),e=!0)},o(o){v(t.$$.fragment,o),e=!1},d(o){o&&u(n),o&&u(s),o&&u(p),o&&u(i),o&&u(f),o&&u($),F(t,o)}}}const Z={file:"form.md",title:"Form"},{file:en,title:B}=Z;class cn extends q{constructor(n){super(),L(this,n,null,Y,C,{})}}export{cn as default,Z as metadata};
