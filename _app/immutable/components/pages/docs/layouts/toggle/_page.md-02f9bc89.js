import{S as x,i as tt,s as nt,T as st,a as j,e as V,c as y,b as k,V as at,W as et,X as ot,f as w,g as ut,t as L,d as ft,h as r,a0 as W,a1 as X,k as b,q as S,w as K,l as h,m as v,r as C,x as R,n as lt,L as d,y as z,a2 as F,z as A,Q as kt,_ as G,u as _t}from"../../../../../chunks/index-4d397774.js";import{a as J}from"../../../../../chunks/index-208ab894.js";/* empty css                                                                  */import{B as pt}from"../../../../../chunks/Button-a30598c2.js";import{K as mt}from"../../../../../chunks/knobs-118d5e43.js";const dt=p=>({}),U=p=>({});function Y(p){let t;const a=p[2].default,n=st(a,p,p[1],null);return{c(){n&&n.c()},l(s){n&&n.l(s)},m(s,o){n&&n.m(s,o),t=!0},p(s,o){n&&n.p&&(!t||o&2)&&at(n,a,s,s[1],t?ot(a,s[1],o,null):et(s[1]),null)},i(s){t||(w(n,s),t=!0)},o(s){L(n,s),t=!1},d(s){n&&n.d(s)}}}function $t(p){let t,a,n;const s=p[2].toggler,o=st(s,p,p[1],U);let l=p[0]&&Y(p);return{c(){o&&o.c(),t=j(),l&&l.c(),a=V()},l(c){o&&o.l(c),t=y(c),l&&l.l(c),a=V()},m(c,i){o&&o.m(c,i),k(c,t,i),l&&l.m(c,i),k(c,a,i),n=!0},p(c,[i]){o&&o.p&&(!n||i&2)&&at(o,s,c,c[1],n?ot(s,c[1],i,dt):et(c[1]),U),c[0]?l?(l.p(c,i),i&1&&w(l,1)):(l=Y(c),l.c(),w(l,1),l.m(a.parentNode,a)):l&&(ut(),L(l,1,1,()=>{l=null}),ft())},i(c){n||(w(o,c),w(l),n=!0)},o(c){L(o,c),L(l),n=!1},d(c){o&&o.d(c),c&&r(t),l&&l.d(c),c&&r(a)}}}function bt(p,t,a){let{$$slots:n={},$$scope:s}=t,{toggle:o=!1}=t;return p.$$set=l=>{"toggle"in l&&a(0,o=l.toggle),"$$scope"in l&&a(1,s=l.$$scope)},[o,s,n]}class ht extends x{constructor(t){super(),tt(this,t,bt,$t,nt,{toggle:0})}}function vt(p){let t;return{c(){t=S("Hide toggled content")},l(a){t=C(a,"Hide toggled content")},m(a,n){k(a,t,n)},d(a){a&&r(t)}}}function Tt(p){let t,a,n,s,o,l,c,i,_,m;return i=new pt({props:{$$slots:{default:[vt]},$$scope:{ctx:p}}}),i.$on("click",p[2]),{c(){t=b("article"),a=b("h3"),n=S("Toggled content"),s=j(),o=b("p"),l=S("This is the toggled content."),c=j(),K(i.$$.fragment)},l(g){t=h(g,"ARTICLE",{});var f=v(t);a=h(f,"H3",{});var $=v(a);n=C($,"Toggled content"),$.forEach(r),s=y(f),o=h(f,"P",{});var T=v(o);l=C(T,"This is the toggled content."),T.forEach(r),c=y(f),R(i.$$.fragment,f),f.forEach(r)},m(g,f){k(g,t,f),d(t,a),d(a,n),d(t,s),d(t,o),d(o,l),d(t,c),z(i,t,null),m=!0},p(g,f){const $={};f&32&&($.$$scope={dirty:f,ctx:g}),i.$set($)},i(g){m||(w(i.$$.fragment,g),kt(()=>{_||(_=G(t,J,{},!0)),_.run(1)}),m=!0)},o(g){L(i.$$.fragment,g),_||(_=G(t,J,{},!1)),_.run(0),m=!1},d(g){g&&r(t),A(i),g&&_&&_.end()}}}function Et(p){let t=p[0].toggle?"Hide content":"Show content",a;return{c(){a=S(t)},l(n){a=C(n,t)},m(n,s){k(n,a,s)},p(n,s){s&1&&t!==(t=n[0].toggle?"Hide content":"Show content")&&_t(a,t)},d(n){n&&r(a)}}}function wt(p){let t,a,n;return a=new pt({props:{variant:"primary",$$slots:{default:[Et]},$$scope:{ctx:p}}}),a.$on("click",p[1]),{c(){t=b("p"),K(a.$$.fragment),this.h()},l(s){t=h(s,"P",{slot:!0});var o=v(t);R(a.$$.fragment,o),o.forEach(r),this.h()},h(){lt(t,"slot","toggler")},m(s,o){k(s,t,o),z(a,t,null),n=!0},p(s,o){const l={};o&33&&(l.$$scope={dirty:o,ctx:s}),a.$set(l)},i(s){n||(w(a.$$.fragment,s),n=!0)},o(s){L(a.$$.fragment,s),n=!1},d(s){s&&r(t),A(a)}}}function Ht(p){let t,a,n,s,o,l,c,i,_,m,g,f,$,T,E,D,M,P,ct=`<code class="language-sv"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> fade <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'svelte/transition'</span>
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Button<span class="token punctuation">,</span> Toggle <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'svelte-spectre'</span>

    <span class="token keyword">let</span> toggle <span class="token operator">=</span> <span class="token boolean">false</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Toggle</span> <span class="token attr-name"><span class="token namespace">bind:</span>toggle</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>toggler<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> toggle <span class="token operator">=</span> <span class="token operator">!</span>toggle<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span>
        <span class="token language-javascript"><span class="token punctuation">&#123;</span>toggle <span class="token operator">?</span> <span class="token string">'Hide'</span> <span class="token operator">:</span> <span class="token string">'Show'</span><span class="token punctuation">&#125;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span> <span class="token attr-name"><span class="token namespace">transition:</span>fade</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>Toggled header<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Toggled content<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Toggle</span><span class="token punctuation">></span></span></code>`,q;function it(e){p[3](e)}let I={$$slots:{toggler:[wt],default:[Tt]},$$scope:{ctx:p}};p[0].toggle!==void 0&&(I.toggle=p[0].toggle),g=new ht({props:I}),W.push(()=>X(g,"toggle",it,p[0].toggle));function rt(e){p[4](e)}let N={config:Ct};return p[0]!==void 0&&(N.state=p[0]),E=new mt({props:N}),W.push(()=>X(E,"state",rt,p[0])),{c(){t=b("h1"),a=S(Z),n=j(),s=b("p"),o=S(`Toggle are flexible toggler wraper provides just slots for content & toggle
control & 1 variable `),l=b("code"),c=S("toggle: boolen"),i=S("."),_=j(),m=b("p"),K(g.$$.fragment),$=j(),T=b("p"),K(E.$$.fragment),M=j(),P=b("pre"),this.h()},l(e){t=h(e,"H1",{});var u=v(t);a=C(u,Z),u.forEach(r),n=y(e),s=h(e,"P",{});var H=v(s);o=C(H,`Toggle are flexible toggler wraper provides just slots for content & toggle
control & 1 variable `),l=h(H,"CODE",{});var B=v(l);c=C(B,"toggle: boolen"),B.forEach(r),i=C(H,"."),H.forEach(r),_=y(e),m=h(e,"P",{});var O=v(m);R(g.$$.fragment,O),O.forEach(r),$=y(e),T=h(e,"P",{});var Q=v(T);R(E.$$.fragment,Q),Q.forEach(r),M=y(e),P=h(e,"PRE",{class:!0});var gt=v(P);gt.forEach(r),this.h()},h(){lt(P,"class","language-sv")},m(e,u){k(e,t,u),d(t,a),k(e,n,u),k(e,s,u),d(s,o),d(s,l),d(l,c),d(s,i),k(e,_,u),k(e,m,u),z(g,m,null),k(e,$,u),k(e,T,u),z(E,T,null),k(e,M,u),k(e,P,u),P.innerHTML=ct,q=!0},p(e,[u]){const H={};u&33&&(H.$$scope={dirty:u,ctx:e}),!f&&u&1&&(f=!0,H.toggle=e[0].toggle,F(()=>f=!1)),g.$set(H);const B={};!D&&u&1&&(D=!0,B.state=e[0],F(()=>D=!1)),E.$set(B)},i(e){q||(w(g.$$.fragment,e),w(E.$$.fragment,e),q=!0)},o(e){L(g.$$.fragment,e),L(E.$$.fragment,e),q=!1},d(e){e&&r(t),e&&r(n),e&&r(s),e&&r(_),e&&r(m),A(g),e&&r($),e&&r(T),A(E),e&&r(M),e&&r(P)}}}const St={file:"toggle.md",title:"Toggle",api:[{title:'<slot name="toggler">: HTMLElement | SvelteComponent',description:"Toggle toggler",variables:"HTMLElement | SvelteComponent"},{title:"<slot>: HTMLElement | SvelteComponent",description:"Toggle content",variables:"HTMLElement | SvelteComponent"},{title:"toggle: boolean = false",description:"Toggle toggle state",variables:"true | false"}],config:{toggle:{type:"checkbox"}}},{file:qt,title:Z,api:Kt,config:Ct}=St;function Lt(p,t,a){let n={toggle:!1};const s=()=>a(0,n.toggle=!n.toggle,n),o=()=>a(0,n.toggle=!1,n);function l(i){p.$$.not_equal(n.toggle,i)&&(n.toggle=i,a(0,n))}function c(i){n=i,a(0,n)}return[n,s,o,l,c]}class Rt extends x{constructor(t){super(),tt(this,t,Lt,Ht,nt,{})}}export{Rt as default,St as metadata};
